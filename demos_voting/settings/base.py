"""
Django settings for demos_voting project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/

Do NOT edit this file, override the settings in `development.py`
or `production.py` instead.
"""

from __future__ import absolute_import, division, print_function, unicode_literals

import os

from django.contrib import messages
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Application definition

INSTALLED_APPS = [
    'demos_voting.base',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'bootstrapform',
    'django_celery_beat',
    'django_celery_results',
    'rest_framework',
    'rest_framework.authtoken',
    'rules.apps.AutodiscoverRulesConfig',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'demos_voting.base.middleware.TimezoneMiddleware',
]

ROOT_URLCONF = 'demos_voting.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.csrf',
                'demos_voting.base.context_processors.base',
            ],
        },
    },
]

WSGI_APPLICATION = 'demos_voting.wsgi.application'

# Authentication
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth

AUTH_USER_MODEL = 'base.User'

AUTHENTICATION_BACKENDS = [
    'rules.permissions.ObjectPermissionBackend',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

LOGIN_URL = 'account_login'
LOGIN_REDIRECT_URL = 'account_profile'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Europe/Athens'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ('el', _('Greek')),
    ('en', _('English')),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'demos_voting/base/locale'),
]

# Sending email
# https://docs.djangoproject.com/en/1.11/topics/email/

EMAIL_SUBJECT_PREFIX = '[DEMOS Voting] '
EMAIL_USE_LOCALTIME = True

# Clickjacking Protection
# https://docs.djangoproject.com/en/1.11/ref/clickjacking/

X_FRAME_OPTIONS = 'DENY'

# The 'messages' framework
# https://docs.djangoproject.com/en/1.11/ref/contrib/messages/

MESSAGE_TAGS = {
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# The 'sites' framework
# https://docs.djangoproject.com/en/1.11/ref/contrib/sites/

SITE_ID = 1

# Django Allauth
# https://github.com/pennersr/django-allauth

ACCOUNT_ADAPTER = 'demos_voting.base.account_adapters.AccountAdapter'
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_FORMS = {
    'add_email': 'demos_voting.base.forms.AddEmailForm',
    'reset_password': 'demos_voting.base.forms.ResetPasswordForm',
    'reset_password_key': 'demos_voting.base.forms.ResetPasswordKeyForm',
    'set_password': 'demos_voting.base.forms.SetPasswordForm',
    'signup': 'demos_voting.base.forms.SignupForm',
}
ACCOUNT_USER_DISPLAY = lambda user: user.email
ACCOUNT_USERNAME_BLACKLIST = ['ballot_distributor', 'bulletin_board', 'election_authority', 'vote_collector']
ACCOUNT_USERNAME_REQUIRED = False

SOCIALACCOUNT_ADAPTER = 'demos_voting.base.account_adapters.SocialAccountAdapter'

# The following custom settings are also available:
# ACCOUNT_IS_OPEN_FOR_SIGNUP = False
# SOCIALACCOUNT_IS_OPEN_FOR_SIGNUP = False

# Celery
# http://docs.celeryproject.org/en/latest/django/index.html

CELERY_RESULT_BACKEND = 'django-db'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# DEMOS Voting

# DEMOS_VOTING_SITE_*: These settings affect the site's look and feel.

DEMOS_VOTING_SITE_NAME = 'DEMOS Voting'
DEMOS_VOTING_SITE_LOGO = 'base/img/LOGO_FINAL_1.png'

# DEMOS_VOTING_URLS: The public URLs of the system's application instances.

DEMOS_VOTING_URLS = {
    'ballot_distributor': '',
    'bulletin_board': '',
    'election_authority': '',
    'vote_collector': '',
}

# DEMOS_VOTING_INTERNAL_URLS: The same as `DEMOS_VOTING_URLS`, but for internal
# use (e.g. API requests). It is important that the internal URLs have the same
# URL path as the public URLs. It defaults to `DEMOS_VOTING_URLS`. This setting
# can be useful if running behind a reverse proxy.

DEMOS_VOTING_INTERNAL_URLS = None

# DEMOS_VOTING_API_VERIFY: Verify SSL certificates for internal API requests.
# http://docs.python-requests.org/en/latest/user/advanced/#ssl-cert-verification

DEMOS_VOTING_API_VERIFY = True

# DEMOS_VOTING_TASK_CONCURRENCY: The number of concurrent tasks that will be
# used. It defaults to the number of CPUs in the system.

DEMOS_VOTING_TASK_CONCURRENCY = None

# DEMOS_VOTING_MAX_*: (election-authority) The maximum number of ballots,
# trustees, questions, options per question, parties, candidates per party.
# If these values are changed then the value of `DATA_UPLOAD_MAX_MEMORY_SIZE`
# may have to be adjusted accordingly.

DEMOS_VOTING_MAX_BALLOTS = 1000
DEMOS_VOTING_MAX_TRUSTEES = 10
DEMOS_VOTING_MAX_QUESTIONS = 10
DEMOS_VOTING_MAX_OPTIONS = 10
DEMOS_VOTING_MAX_PARTIES = 10
DEMOS_VOTING_MAX_CANDIDATES = 10

DATA_UPLOAD_MAX_MEMORY_SIZE = 32 * 1024 * 1024

# DEMOS_VOTING_CERTIFICATE_ISSUER: (election-authority) Certificate authority
# configuration. If both `certificate_path` and private_key_path` are omitted
# then self-signed certificates will be generated. `private_key_password` is
# optional.

DEMOS_VOTING_CERTIFICATE_ISSUER = {
    'certificate_path': '',
    'private_key_path': '',
    'private_key_password': '',
}
