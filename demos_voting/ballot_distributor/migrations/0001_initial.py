# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-03-11 00:14
from __future__ import unicode_literals

import demos_voting.ballot_distributor.models
import demos_voting.base.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'administrators',
                'default_related_name': 'administrators',
                'verbose_name': 'administrator',
            },
        ),
        migrations.CreateModel(
            name='Ballot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(100)], verbose_name='serial number')),
                ('file', models.FileField(blank=True, default=None, null=True, upload_to=demos_voting.ballot_distributor.models.ballot_file_path, verbose_name='file')),
            ],
            options={
                'ordering': ['serial_number'],
                'abstract': False,
                'verbose_name_plural': 'ballots',
                'default_related_name': 'ballots',
                'verbose_name': 'ballot',
            },
        ),
        migrations.CreateModel(
            name='BallotArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ballot_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='number of ballots')),
                ('language', models.CharField(choices=[('el', 'Greek'), ('en', 'English')], max_length=8, verbose_name='language')),
                ('file', models.FileField(blank=True, default=None, null=True, upload_to=demos_voting.ballot_distributor.models.ballot_archive_file_path, verbose_name='file')),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=32, verbose_name='state')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('processing_started_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='processing started at')),
                ('processing_ended_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='processing ended at')),
            ],
            options={
                'ordering': ['created_at'],
                'verbose_name': 'ballot archive',
                'verbose_name_plural': 'ballot archives',
                'default_related_name': 'ballot_archives',
            },
        ),
        migrations.CreateModel(
            name='BallotOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='index')),
                ('receipt', models.TextField(verbose_name='receipt')),
                ('vote_code', models.TextField(verbose_name='vote-code')),
            ],
            options={
                'ordering': ['index'],
                'abstract': False,
                'verbose_name_plural': 'options',
                'default_related_name': 'options',
                'verbose_name': 'option',
            },
        ),
        migrations.CreateModel(
            name='BallotPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(choices=[('A', 'A'), ('B', 'B')], max_length=1, verbose_name='tag')),
                ('credential', models.TextField(verbose_name='credential')),
                ('security_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='security code')),
            ],
            options={
                'ordering': ['tag'],
                'abstract': False,
                'verbose_name_plural': 'parts',
                'default_related_name': 'parts',
                'verbose_name': 'part',
            },
        ),
        migrations.CreateModel(
            name='BallotQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'ordering': ['election_question'],
                'abstract': False,
                'verbose_name_plural': 'questions',
                'default_related_name': 'questions',
                'verbose_name': 'question',
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(allow_unicode=True, unique=True, verbose_name='identifier')),
                ('name', models.TextField(verbose_name='name')),
                ('voting_starts_at', models.DateTimeField(verbose_name='voting starts at')),
                ('voting_ends_at', models.DateTimeField(verbose_name='voting ends at')),
                ('type', models.CharField(choices=[('question_option', 'Question-Option'), ('party_candidate', 'Party-Candidate')], default='question_option', max_length=32, verbose_name='type')),
                ('vote_code_type', models.CharField(choices=[('short', 'Short'), ('long', 'Long')], default='short', max_length=32, verbose_name='vote-code type')),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('hidden', 'Hidden'), ('private', 'Private')], default='public', max_length=32, verbose_name='visibility')),
                ('communication_language', models.CharField(choices=[('el', 'Greek'), ('en', 'English')], max_length=8, verbose_name='communication language')),
                ('ballot_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='number of ballots')),
                ('credential_length', models.PositiveSmallIntegerField(default=16, validators=[django.core.validators.MinValueValidator(1)], verbose_name='credential length')),
                ('security_code_length', models.PositiveSmallIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(2)], verbose_name='security code length')),
                ('vote_code_length', models.PositiveSmallIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='vote-code length')),
                ('receipt_length', models.PositiveSmallIntegerField(default=8, validators=[django.core.validators.MinValueValidator(1)], verbose_name='receipt length')),
                ('commitment_key', models.TextField(verbose_name='commitment key')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to=demos_voting.base.models.election_certificate_path, verbose_name='certificate')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('state', models.CharField(choices=[('setup', 'Setup'), ('ballot_distribution', 'Ballot distribution'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='setup', max_length=32, verbose_name='state')),
                ('ballot_distribution_started_at', models.DateTimeField(blank=True, null=True, verbose_name='ballot distribution started at')),
                ('ballot_distribution_ended_at', models.DateTimeField(blank=True, null=True, verbose_name='ballot distribution ended at')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'election',
                'verbose_name_plural': 'elections',
                'default_related_name': 'elections',
            },
        ),
        migrations.CreateModel(
            name='ElectionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='index')),
                ('name', models.TextField(blank=True, null=True, verbose_name='name')),
            ],
            options={
                'ordering': ['index'],
                'abstract': False,
                'verbose_name_plural': 'options',
                'default_related_name': 'options',
                'verbose_name': 'option',
            },
        ),
        migrations.CreateModel(
            name='ElectionQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='index')),
                ('name', models.TextField(blank=True, null=True, verbose_name='name')),
                ('min_selection_count', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='minimum number of selections')),
                ('max_selection_count', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='maximum number of selections')),
                ('option_table_layout', models.CharField(choices=[('1_column', '1-column'), ('2_column', '2-column')], default='1_column', max_length=32, verbose_name='option table layout')),
            ],
            options={
                'ordering': ['index'],
                'abstract': False,
                'verbose_name_plural': 'questions',
                'default_related_name': 'questions',
                'verbose_name': 'question',
            },
        ),
        migrations.CreateModel(
            name='Voter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voters', to='ballot_distributor.Election')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'voters',
                'default_related_name': 'voters',
                'verbose_name': 'voter',
            },
        ),
        migrations.CreateModel(
            name='VoterList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, default=None, null=True, upload_to=demos_voting.ballot_distributor.models.voter_list_file_path, verbose_name='file')),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=32, verbose_name='state')),
                ('error', models.CharField(blank=True, choices=[('invalid_file', 'The file is not valid.'), ('empty_file', 'The file is empty.'), ('too_many_values', 'The file contains more email addresses than the number of ballots available.')], default=None, max_length=32, null=True, verbose_name='error')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('processing_started_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='processing started at')),
                ('processing_ended_at', models.DateTimeField(blank=True, default=None, null=True, verbose_name='processing ended at')),
                ('administrator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='voter_lists', to='ballot_distributor.Administrator')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voter_lists', to='ballot_distributor.Election')),
                ('voters', models.ManyToManyField(related_name='voter_lists', to='ballot_distributor.Voter')),
            ],
            options={
                'ordering': ['created_at'],
                'verbose_name': 'voter list',
                'verbose_name_plural': 'voter lists',
                'default_related_name': 'voter_lists',
            },
        ),
    ]
